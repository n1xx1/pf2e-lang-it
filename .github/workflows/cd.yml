name: Module CD

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm Store Directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm Deps
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-

      - name: Install pnpm Deps
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Get Versions
        run: |
          MODULE_VERSION=$(grep -oP '(?<="version": ")[^"]+' dist/module.json | tr -d '\n')
          echo "moduleVersion=$MODULE_VERSION" >> $GITHUB_ENV
          SYSTEM_VERSION=$(cat sources/version.txt | tr -d '\n')
          echo "systemVersion=$SYSTEM_VERSION" >> $GITHUB_ENV
          MODULE_VERSION_PREFIX=$(echo $MODULE_VERSION | grep -oP '^\d+\.\d+')
          echo "moduleVersionPrefix=$MODULE_VERSION_PREFIX" >> $GITHUB_ENV

      - name: Zip Files
        working-directory: ./dist
        run: zip -r ./module.zip ./*

      - name: Create Version Release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ env.moduleVersion }}
          body: |
            For PF2e System version ${{ env.systemVersion }}.
            Module Version: ${{ env.moduleVersion }}
            Tag: ${{ env.moduleVersionPrefix }}.${{ github.run_number }}
          allowUpdates: false
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./dist/module.json,./dist/module.zip"
          tag: ${{ env.moduleVersionPrefix }}.${{ github.run_number }}
